// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VaultNet.Db;

#nullable disable

namespace VaultNet.Migrations
{
    [DbContext(typeof(VaultNetContext))]
    [Migration("20250503034308_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductSnapshot", b =>
                {
                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("SnapshotsSnapshotId")
                        .HasColumnType("int");

                    b.HasKey("ProductsProductId", "SnapshotsSnapshotId");

                    b.HasIndex("SnapshotsSnapshotId");

                    b.ToTable("ProductSnapshot");
                });

            modelBuilder.Entity("VaultNet.Db.Bussiness", b =>
                {
                    b.Property<int>("BussinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BussinessId"));

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("BussinessId");

                    b.ToTable("Bussiness");
                });

            modelBuilder.Entity("VaultNet.Db.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("BussinessId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoryId");

                    b.HasIndex("BussinessId", "Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VaultNet.Db.Change", b =>
                {
                    b.Property<int>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ChangeId"));

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChangeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Change");
                });

            modelBuilder.Entity("VaultNet.Db.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("BussinessId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("BussinessId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VaultNet.Db.Snapshot", b =>
                {
                    b.Property<int>("SnapshotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SnapshotId"));

                    b.Property<int>("BussinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SnapshotId");

                    b.HasIndex("BussinessId");

                    b.ToTable("Snapshots");
                });

            modelBuilder.Entity("VaultNet.Db.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<int>("BussinessId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("UnitId");

                    b.HasIndex("BussinessId", "Name")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("VaultNet.Db.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("MaternalLastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaternalLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VaultNet.Db.UserBussiness", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BussinessId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "BussinessId");

                    b.HasIndex("BussinessId");

                    b.ToTable("UserBussiness");
                });

            modelBuilder.Entity("ProductSnapshot", b =>
                {
                    b.HasOne("VaultNet.Db.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaultNet.Db.Snapshot", null)
                        .WithMany()
                        .HasForeignKey("SnapshotsSnapshotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VaultNet.Db.Category", b =>
                {
                    b.HasOne("VaultNet.Db.Bussiness", "Bussiness")
                        .WithMany("Categories")
                        .HasForeignKey("BussinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bussiness");
                });

            modelBuilder.Entity("VaultNet.Db.Change", b =>
                {
                    b.HasOne("VaultNet.Db.Product", "Product")
                        .WithMany("Changes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaultNet.Db.User", "User")
                        .WithMany("Changes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VaultNet.Db.Product", b =>
                {
                    b.HasOne("VaultNet.Db.Bussiness", "Bussiness")
                        .WithMany("Products")
                        .HasForeignKey("BussinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaultNet.Db.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaultNet.Db.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bussiness");

                    b.Navigation("Category");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("VaultNet.Db.Snapshot", b =>
                {
                    b.HasOne("VaultNet.Db.Bussiness", "Bussiness")
                        .WithMany()
                        .HasForeignKey("BussinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bussiness");
                });

            modelBuilder.Entity("VaultNet.Db.Unit", b =>
                {
                    b.HasOne("VaultNet.Db.Bussiness", "Bussiness")
                        .WithMany("Units")
                        .HasForeignKey("BussinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bussiness");
                });

            modelBuilder.Entity("VaultNet.Db.UserBussiness", b =>
                {
                    b.HasOne("VaultNet.Db.Bussiness", "Bussiness")
                        .WithMany("Users")
                        .HasForeignKey("BussinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaultNet.Db.User", "User")
                        .WithMany("Bussiness")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bussiness");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VaultNet.Db.Bussiness", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Products");

                    b.Navigation("Units");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("VaultNet.Db.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("VaultNet.Db.Product", b =>
                {
                    b.Navigation("Changes");
                });

            modelBuilder.Entity("VaultNet.Db.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("VaultNet.Db.User", b =>
                {
                    b.Navigation("Bussiness");

                    b.Navigation("Changes");
                });
#pragma warning restore 612, 618
        }
    }
}
